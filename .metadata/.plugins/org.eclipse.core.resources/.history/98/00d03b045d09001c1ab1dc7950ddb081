package com.example.dao.impl;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate;
import org.springframework.stereotype.Repository;
import org.springframework.transaction.annotation.Transactional;

import com.example.dao.BaseDao;
import com.example.dao.ExampleDao;
import com.example.domain.Photographer;
import com.example.mapper.PhotographerRowMapper;


@Repository
@Transactional(readOnly = true)
public class ExampleDaoImpl extends BaseDao implements ExampleDao{

	private NamedParameterJdbcTemplate getDbTemplate() {
		NamedParameterJdbcTemplate template = getNamedParameterJdbcTemplate();
		return template; 	
	}
	@Override
	public String getExampleDao() {
		String result = "Failed";
		try {			
//			String query = sqls.getStatement(SqlType.SELECT, NcsrConstants.GET_BENEFIT_DETAILS);
			String query = "SELECT 'ABCDEF12345' FROM DUAL";
			Map<String, Object> params = new HashMap<>();
			result = getDbTemplate().queryForObject(query, params, String.class);	
			
		} catch (Exception ex) {			
			
		}
		return result;
	}
	
	@Override
	public List<Photographer> getAll() {
		List<Photographer> result;
		try {			
//			String query = sqls.getStatement(SqlType.SELECT, NcsrConstants.GET_BENEFIT_DETAILS);
			String query = "SELECT * FROM photographer";
			Map<String, Object> params = new HashMap<>();
			result = getDbTemplate().query(query, params, new PhotographerRowMapper());	
			return result;
		} catch (Exception ex) {			
			logger.error(ex);
			throw new IllegalArgumentException(ex);
		}
	}
	
	@Override
	public String create() {
		List<Photographer> result;
		try {			
//			String query = sqls.getStatement(SqlType.SELECT, NcsrConstants.GET_BENEFIT_DETAILS);
			String query = "SELECT * FROM photographer";
			Map<String, Object> params = new HashMap<>();
			result = getDbTemplate().query(query, params, new PhotographerRowMapper());	
			return result;
		} catch (Exception ex) {			
			logger.error(ex);
			throw new IllegalArgumentException(ex);
		}
	}
	
	

}
